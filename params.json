{"name":"React-isomorphic-boilerplate","tagline":"A great place to start your isomorphic React applications","body":"# React Isomorphic Hot-Loading Boilerplate\r\n\r\nWith ES6/7 support and a shared client/server routing table\r\n\r\n\r\n## Overview\r\n\r\nIt might seem like I'm striving for full buzzword compliance. In fact, I just want a\r\ndevelopment environment in which I can be productive and happy. I'm well on the road\r\nto getting there, and I want to share that with you. If you make it better, please do\r\nshare!\r\n\r\n\r\n## Features\r\n\r\n### Isomorphic React Rendering\r\n\r\nYou get the full benefits of React on the client side while still having the performance\r\nand SEO benefits of server-side rendering. You also get maintainability benefits by\r\nreducing the overall size of your code base, and if you adhere to the React philosophy\r\nyou likely design a better application as well.\r\n\r\n### Smart asset bundling with Hot Module Replacement\r\n\r\nWebpack is the all-singing all-dancing asset bundler, though it can be quite daunting\r\nto understand. Much of the hard work has already been done for you here, so you can code\r\nfrom the beginning while watching your JSX and CSS changes reflected in the browser with\r\nno reloads (not even an automatic reload!)\r\n\r\n### The Javascript of Tomorrow, Today\r\n\r\nUsing the fabulous 6to5 transpiler on the server and client, you can write generators,\r\nuse the new `class` syntax, arrow functions, and more. Using the `module.extensions` API\r\nobviates the need for any compilation step in Node, too. Additionally, if you're too\r\nimpatient to `await`, I've also packaged up versions of `node-jsx` and `jsx-loader` which\r\nallow you to use ES7 async functions.\r\n\r\n### Shared client/server routing table, courtesy of React Router\r\n\r\nWrite your web application routes once, and use the excellent features available with\r\nReact Router.\r\n\r\n### Debugging\r\n\r\nShips with convenient node-inspector support. Also, check out the\r\n[React DevTools for Chrome](https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi) if you haven't tried them yet.\r\n\r\n\r\n## Setup\r\n\r\nTo make everything work, this assumes you have nginx in `$PATH`. To install you have\r\n[several options](http://wiki.nginx.org/Install) although no mention is made of Mac OS X.\r\nI personally install mine with [homebrew](http://brew.sh).\r\n\r\nBeyond that, all the dependencies are just an `npm install` away.\r\n\r\n### Running\r\n\r\nThere are 3 processes you need to run. For maximum debuggability, I generally run them\r\neach in a different tab / tmux pane. The separate invocations are:\r\n\r\n```\r\nnpm run-script nginx\r\nnpm run-script webpack\r\nnpm start\r\n```\r\n\r\nIf you just want to run everything in one shell, you can:\r\n\r\n```\r\nnpm run-script everything\r\n```\r\n\r\nOnce you've got it all running, visit http://localhost:3000\r\n\r\n### Debugging\r\n\r\nIf your application is running in the same environment as your web browser (i.e., not on\r\na VM or a remote host), you can debug your server using node-inspector:\r\n\r\n```npm run-script debug```\r\n\r\nThis will launch your default browser pointed at the node-inspector interface for the\r\nserver process.\r\n\r\nIf it's not on your local computer, you still run the server but less conveniently:\r\n\r\n```node_modules/.bin/node-inspector server/server.js```\r\n\r\nThen you'll need to hit port 5858 on the remote server/VM, which may or may not be\r\navailable depending on firewalls.\r\n\r\n\r\n## TODO\r\n\r\n- Jest integration\r\n- configuration management\r\n- use extract-text-plugin in production mode for css\r\n- a flux example\r\n- i18n\r\n- test node v0.12.0, io.js compatibility\r\n\r\n\r\n## FIXME\r\n\r\n- vendor script is downloading twice\r\n\r\n\r\n## NOTES\r\n\r\n- depending on your module structure, you may have to [opt-in to hot loading](https://github.com/gaearon/react-hot-loader/blob/master/docs/README.md#migrating-to-10)\r\n- react-router is emitting billions of warnings on react-0.13-beta.1, see [rackt/react-router#638](https://github.com/rackt/react-router/issues/638)\r\n\r\n\r\n## See Also\r\n\r\n- https://github.com/gpbl/isomorphic-react-template\r\n- https://github.com/ndreckshage/isomorphic\r\n- so many more\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}